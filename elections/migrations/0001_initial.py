# Generated by Django 5.2.4 on 2025-08-15 08:28

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UIK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Номер УИК')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('planned_voters_count', models.PositiveIntegerField(default=0, help_text='Ожидаемое количество избирателей на участке', verbose_name='Плановое количество избирателей')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'УИК',
                'verbose_name_plural': 'УИК',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Обязательное поле. 150 символов или меньше. Может содержать буквы, цифры, пробелы и символы @/./+/-/_/.', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='Имя пользователя может содержать только буквы, цифры, пробелы и символы @/./+/-/_.', regex='^[\\w\\s@.+\\-]+$')], verbose_name='Логин')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('middle_name', models.CharField(max_length=150, verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '8XXXXXXXXXX'", regex='^8\\d{10}$')], verbose_name='Телефон')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('brigadier', 'Бригадир'), ('agitator', 'Агитатор'), ('operator', 'Оператор')], default='admin', max_length=20, verbose_name='Роль')),
                ('is_active_participant', models.BooleanField(default=True, verbose_name='Активный участник')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('data', models.JSONField(default=dict, verbose_name='Данные')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Аналитика',
                'verbose_name_plural': 'Аналитика',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UIKResults',
            fields=[
                ('uik', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='elections.uik', verbose_name='УИК')),
                ('ballot_box_votes', models.PositiveIntegerField(default=0, verbose_name='Урна')),
                ('koib_votes', models.PositiveIntegerField(default=0, verbose_name='КОИБ')),
                ('independent_votes', models.PositiveIntegerField(default=0, verbose_name='Самостоятельно')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Результат по УИК',
                'verbose_name_plural': 'Результаты по УИК',
                'ordering': ['uik__number'],
            },
        ),
        migrations.AddField(
            model_name='uik',
            name='agitators',
            field=models.ManyToManyField(blank=True, limit_choices_to={'is_active_participant': True, 'role': 'agitator'}, related_name='assigned_uiks_as_agitator', to=settings.AUTH_USER_MODEL, verbose_name='Агитаторы'),
        ),
        migrations.AddField(
            model_name='uik',
            name='brigadier',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_active_participant': True, 'role': 'brigadier'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_uik_as_brigadier', to=settings.AUTH_USER_MODEL, verbose_name='Бригадир'),
        ),
        migrations.AddField(
            model_name='uik',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_uiks', to=settings.AUTH_USER_MODEL, verbose_name='Создал'),
        ),
        migrations.AddField(
            model_name='uik',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_uiks', to=settings.AUTH_USER_MODEL, verbose_name='Изменил'),
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('registration_address', models.TextField(verbose_name='Адрес регистрации')),
                ('phone_number', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '8XXXXXXXXXX'", regex='^8\\d{10}$')], verbose_name='Телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_voters', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('uik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elections.uik', verbose_name='УИК')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_voters', to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
            ],
            options={
                'verbose_name': 'Избиратель',
                'verbose_name_plural': 'Избиратели',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='PlannedVoter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_date', models.DateField(blank=True, null=True, verbose_name='Планируемая дата голосования')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('agitator', models.ForeignKey(limit_choices_to={'is_active_participant': True, 'role': 'agitator'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Агитатор')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_planned_voters', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_planned_voters', to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elections.voter', verbose_name='Избиратель')),
            ],
            options={
                'verbose_name': 'Планируемый избиратель',
                'verbose_name_plural': 'Планируемые избиратели',
                'ordering': ['-created_at'],
                'unique_together': {('voter', 'agitator')},
            },
        ),
        migrations.CreateModel(
            name='VotingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voting_date', models.DateField(blank=True, null=True, verbose_name='Дата голосования')),
                ('voting_method', models.CharField(blank=True, choices=[('ballot_box', 'Урна'), ('koib', 'КОИБ'), ('independent', 'Самостоятельно')], max_length=20, verbose_name='Способ голосования')),
                ('confirmed_by_brigadier', models.BooleanField(default=False, verbose_name='Подтверждено бригадиром')),
                ('brigadier_notes', models.TextField(blank=True, verbose_name='Заметки бригадира')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_voting_records', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('planned_voter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='elections.plannedvoter', verbose_name='Планируемый избиратель')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_voting_records', to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
            ],
            options={
                'verbose_name': 'Запись о голосовании',
                'verbose_name_plural': 'Записи о голосовании',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Workplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название организации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_workplaces', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_workplaces', to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
            ],
            options={
                'verbose_name': 'Место работы',
                'verbose_name_plural': 'Места работы',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='voter',
            name='workplace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elections.workplace', verbose_name='Место работы'),
        ),
        migrations.AddField(
            model_name='user',
            name='workplace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elections.workplace', verbose_name='Место работы'),
        ),
        migrations.AlterUniqueTogether(
            name='voter',
            unique_together={('last_name', 'first_name', 'middle_name', 'birth_date')},
        ),
    ]
